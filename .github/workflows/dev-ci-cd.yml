name: "[Cronicas] Development CI/CD"

on:
  pull_request:
    branches:
      - develop
    types:
      - closed

jobs:
  bump-version:
    name: Cronicas Bump Version
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      version: ${{ steps.tag.outputs.new_version }}
    steps:    
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: |
          echo "Version: ${{ env.version }}"
          echo "Ref: ${{ github.ref }}"
          echo "Target: ${{ github.base_ref }}"
          echo "Source: ${{ github.head_ref }}"

      - name: Bump Version
        id: tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          tag_prefix: "v"
          github_token: ${{ secrets.PAT_GITHUB_TOKEN }}
          release_branches: "develop, release/v*, main"
          dry_run: true

      - name: Output the new version
        run: |
          echo "New version: ${{ steps.tag.outputs.new_version }}"
          echo "New tag: ${{ steps.tag.outputs.new_tag }}"
          echo "Previous tag: ${{ steps.tag.outputs.previous_tag }}"
          echo "Previous version: ${{ steps.tag.outputs.previous_version }}"

  ci:
    name: Cronicas CI
    needs: bump-version2
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      version: ${{ needs.bump-version.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install Dependencies
        run: npm ci

      - name: Validate Repository Structure
        uses: ./.github/actions/validate-repo

      - name: Run Linter
        run: npm run lint

      - name: Run Tests
        run: npm test

      - name: Login GitHub Container Registry
        run: |
          echo ${{ secrets.PAT_GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build e Push para o GHCR
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/cronicas-app
          docker build -t $IMAGE_NAME:${{ env.version }} .
          docker tag $IMAGE_NAME:${{ env.version }} $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ env.version }}
          docker push $IMAGE_NAME:latest

  cd:
    name: Cronicas CD
    needs: [bump-version, ci]
    runs-on: ubuntu-latest
    if: always() && success()
    environment:
      name: development
    env:
      version: ${{ needs.bump-version.outputs.version }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Deploy and Run Docker Image
        run: |
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets '[{"Key":"InstanceIds","Values":["${{ secrets.EC2_INSTANCE_ID }}"]}]' \
            --parameters 'commands=[
              "echo ${{ secrets.PAT_GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin",
              "docker pull ghcr.io/${{ github.repository_owner }}/cronicas-app:latest",
              "docker stop cronicas-app || true",
              "docker rm cronicas-app || true",
              "docker run -d -p 3001:3001 --name cronicas-app ghcr.io/${{ github.repository_owner }}/cronicas-app:latest"
            ]' \
            --region sa-east-1

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT_GITHUB_TOKEN }}
          base: 'release/v${{ env.version }}'
          branch: develop
          title: '[CRÃ”NICAS] PR criado automaticamente -> release/v${{ env.version }} by ${{ github.actor }}'
          body: 'This PR was automatically created by GitHub Actions.'
          draft: false
