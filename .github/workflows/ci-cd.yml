name: "[Cronicas] CI/CD"

on:
  push:
    branches: 
      - main

jobs:
  ci:
    name: Cronicas CI
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          
      - name: Install Dependencies
        run: npm install

      - name: Validate Repository Structure
        uses: ./.github/actions/validate-repo

      - name: Run Linter
        run: npm run lint
        
      - name: Run Tests
        run: npm test

      - name: Build Application
        run: |
          npm prune --production
          mkdir -p build
          cp -r src/ package.json package-lock.json Dockerfile build/
          
      - name: Create Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-build
          path: build/
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          draft: false
          prerelease: false
          files: build/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}

      # - name: Create GitHub Release
      #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      #   run: |
      #     TAG_NAME="v${{ github.run_number }}"
      #     RELEASE_NAME="Release v${{ github.run_number }}"
      #     API_URL="https://api.github.com/repos/${{ github.repository }}/releases"
      #     AUTH_HEADER="Authorization: token ${{ secrets.PAT_GITHUB_TOKEN }}"
          
      #     curl -X POST -H "$AUTH_HEADER" -H "Content-Type: application/json" \
      #       -d "{\"tag_name\":\"$TAG_NAME\",\"name\":\"$RELEASE_NAME\",\"draft\":false,\"prerelease\":false}" \
      #       $API_URL
  cd:
    name: Cronicas CD
    needs: ci
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.app-url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
            
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: app-build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2          