name: "[Cronicas] Release Tag"

run-name: "Release Tag | by ${{ github.actor }}"

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    name: Cronicas Release Tag
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    permissions: write-all
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Take version
        run: |
          echo "version=$(echo ${{ github.head_ref }} | sed 's|release/v||')" >> $GITHUB_ENV

      - name: Login GitHub Container Registry
        run: |
          echo ${{ secrets.PAT_GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Save Docker Image
        run: |
          docker pull ghcr.io/${{ github.repository_owner }}/cronicas-app:${{ env.version }}
          docker save ghcr.io/${{ github.repository_owner }}/cronicas-app:${{ env.version }} -o cronicas-app-image-v${{ env.version }}.tar

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.version }}
          name: Release v${{ env.version }}
          draft: false
          prerelease: false
          files: cronicas-app-image-v${{ env.version }}.tar
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_GITHUB_TOKEN }}

  notify-failure:
    name: Cronicas Notify Failure
    runs-on: ubuntu-latest
    if: failure()
    needs: release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Get Failed Job
        id: get-failed-job
        run: |
          echo "JOB_NAME=$(jq -r 'to_entries[] | select(.value.result == "failure") | .key' <<< '${{ toJson(needs) }}')" >> $GITHUB_ENV
          echo "ERROR_MESSAGE=$(jq -r 'to_entries[] | select(.value.result == "failure") | .value.outputs.error_message // "No error message provided"' <<< '${{ toJson(needs) }}')" >> $GITHUB_ENV

      - name: Send Email Notification
        uses: masneto/cronicas-actions/.github/actions/email-notification-action@main 
        with:
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          to: ${{ secrets.MAIL_USERNAME }}
          from: ${{ secrets.MAIL_USERNAME }}
          subject: "[CRÃ”NICAS ALERTAS]ðŸš¨ Falha no Workflow ${{ github.workflow }}"
          workflow_name: ${{ github.workflow }}
          branch: ${{ github.ref_name }}
          author_name: ${{ github.actor }}
          run_url: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          error_message: "Job com falha: ${{ env.JOB_NAME }} - Mensagem: ${{ env.ERROR_MESSAGE }}"