name: "[Cronicas] Homologation CD"

on:
  pull_request:
    branches:
      - 'release/v*'
    types:
      - closed

jobs:
  create-tag:
    name: Cronicas Bump Version
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    outputs:
      version: ${{ steps.tag.outputs.new_version }}   
    steps:    
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check Next Version
        id: tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          tag_prefix: "v"
          github_token: ${{ secrets.PAT_GITHUB_TOKEN }}
          release_branches: 'release*'
          dry_run: false

      - name: Output the new version
        run: |
          echo "New version: ${{ steps.tag.outputs.new_version }}"
          echo "New tag: ${{ steps.tag.outputs.new_tag }}"

  cd:
    name: Cronicas CD
    runs-on: ubuntu-latest          
    permissions: write-all
    needs: create-tag
    if: github.event.pull_request.merged == true
    environment:
      name: homologation
    env:
      version: $(echo ${{ github.base_ref }} | sed 's|release/v||')
      release-version: ${{ needs.create-tag.outputs.version }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login GitHub Container Registry
        run: |
          echo ${{ secrets.PAT_GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Deploy and Run Docker Image
        run: |
          export VERSION=${{ env.version }}
          aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets '[{"Key":"InstanceIds","Values":["${{ secrets.EC2_INSTANCE_ID }}"]}]' \
            --parameters "commands=[
              \"echo ${{ secrets.PAT_GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin\",
              \"docker pull ghcr.io/${{ github.repository_owner }}/cronicas-app:$VERSION\",
              \"docker stop cronicas-app || true\",
              \"docker rm cronicas-app || true\",
              \"docker run -d -p 3000:3000 --name cronicas-app ghcr.io/${{ github.repository_owner }}/cronicas-app:$VERSION\"
            ]" \
            --region sa-east-1

      - name: Create PR to main
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PAT_GITHUB_TOKEN }}
          script: |
            const version = `${{ env.release-version }}`;
            console.log('Version:', version);
            const base = 'main';
            const head = `release/v${version}`;
            const title = `[PRD] PR criado automaticamente -> ${base} by ${context.actor}`;
            const body = 'This PR was automatically created by GitHub Actions.';

            const { data: existingPRs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base,
              head,
            });

            if (existingPRs.length > 0) {
              console.log(`Pull Request jรก existe: ${existingPRs[0].html_url}`);
            } else {
              const { data: pullRequest } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                base,
                head,
                title,
                body,
              });

              console.log(`Pull Request criado com sucesso: ${pullRequest.html_url}`);
            }
